// Generated by CoffeeScript 1.8.0
var Person, PersonView, person, personView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Person = (function(_super) {
  __extends(Person, _super);

  function Person() {
    return Person.__super__.constructor.apply(this, arguments);
  }

  Person.prototype.defaults = {
    name: 'John Doe',
    occupation: 'Worker'
  };

  return Person;

})(Backbone.Model);

PersonView = (function(_super) {
  __extends(PersonView, _super);

  function PersonView() {
    this.sayHi = __bind(this.sayHi, this);
    return PersonView.__super__.constructor.apply(this, arguments);
  }

  PersonView.prototype.initialize = function() {
    return this.model.on('yoyoyo', this.sayHi);
  };

  PersonView.prototype.sayHi = function() {
    return console.log('Yo yo yo');
  };

  return PersonView;

})(Backbone.View);

person = new Person({
  name: 'Ferdi Ramdhon'
});

personView = new PersonView({
  model: person
});

person.trigger('yoyoyo');
